diff --git a/setup.py b/setup.py
index b3e173a..73cbd1c 100755
--- a/setup.py
+++ b/setup.py
@@ -917,75 +917,75 @@ if __name__ == "__main__":
                     f"Update it via `pip install blosc2 -U`."
                 )
 
-        if not rundir:
-            loc = {
-                "posix": "the default library paths",
-                "nt": "any of the directories in %%PATH%%",
-            }[os.name]
-
-            if package.name == "blosc2":
-                # We will copy this into the tables directory
-                print(
-                    "  * Copying blosc2 runtime library to 'tables' dir"
-                    " because it was not found in standard locations"
-                )
-                platform_system = platform.system()
-                if platform_system == "Linux":
-                    shutil.copy(libdir / "libblosc2.so", ROOT / "tables")
-                    copy_libs += ["libblosc2.so"]
-
-                    dll_dir = "/tmp/hdf5/lib"
-                    # Copy dlls when producing the wheels in CI
-                    if "bdist_wheel" in sys.argv and os.path.exists(dll_dir):
-                        shared_libs = glob.glob(str(libdir) + "/libblosc2.so*")
-                        for lib in shared_libs:
-                            shutil.copy(lib, dll_dir)
-
-                elif platform_system == "Darwin":
-                    shutil.copy(libdir / "libblosc2.dylib", ROOT / "tables")
-                    copy_libs += ["libblosc2.dylib"]
-
-                    dll_dir = "/tmp/hdf5/lib"
-                    # Copy dlls when producing the wheels in CI
-                    if "bdist_wheel" in sys.argv and os.path.exists(dll_dir):
-                        shared_libs = glob.glob(
-                            str(libdir) + "/libblosc2*.dylib"
-                        )
-                        for lib in shared_libs:
-                            shutil.copy(lib, dll_dir)
-
-                else:
-                    copy_libs += ["libblosc2.dll"]
-                    dll_dir = f"{CONDA_PREFIX}\\Library\\bin"
-                    # Copy dlls when producing the wheels in CI
-                    if "bdist_wheel" in sys.argv and os.path.exists(dll_dir):
-                        # If building a wheel and Conda in use, these could be the
-                        # same path. Indicative that the ``rundir`` check is probably
-                        # not sufficient above, but easy enough to guard against
-                        # trying to copy a file to its current location
-                        # (thereby avoiding a "are the same file" shutil error).
-                        if Path(dll_dir) != libdir.parent / "bin":
-                            shutil.copy(
-                                libdir.parent / "bin" / "libblosc2.dll", dll_dir
-                            )
-                    else:
-                        shutil.copy(
-                            libdir.parent / "bin" / "libblosc2.dll", "tables"
-                        )
-            else:
-                if "bdist_wheel" in sys.argv and os.name == "nt":
-                    exit_with_error(
-                        f"Could not find the {package.name} runtime.",
-                        f"The {package.name} shared library was *not* found "
-                        f"in {loc}. Cannot build wheel without the runtime.",
-                    )
-
-                print_warning(
-                    f"Could not find the {package.name} runtime.",
-                    f"The {package.name} shared library was *not* found "
-                    f"in {loc}. In case of runtime problems, please "
-                    f"remember to install it.",
-                )
+        #if not rundir:
+        #    loc = {
+        #        "posix": "the default library paths",
+        #        "nt": "any of the directories in %%PATH%%",
+        #    }[os.name]
+
+        #    if package.name == "blosc2":
+        #        # We will copy this into the tables directory
+        #        print(
+        #            "  * Copying blosc2 runtime library to 'tables' dir"
+        #            " because it was not found in standard locations"
+        #        )
+        #        platform_system = platform.system()
+        #        if platform_system == "Linux":
+        #            shutil.copy(libdir / "libblosc2.so", ROOT / "tables")
+        #            copy_libs += ["libblosc2.so"]
+
+        #            dll_dir = "/tmp/hdf5/lib"
+        #            # Copy dlls when producing the wheels in CI
+        #            if "bdist_wheel" in sys.argv and os.path.exists(dll_dir):
+        #                shared_libs = glob.glob(str(libdir) + "/libblosc2.so*")
+        #                for lib in shared_libs:
+        #                    shutil.copy(lib, dll_dir)
+
+        #        elif platform_system == "Darwin":
+        #            shutil.copy(libdir / "libblosc2.dylib", ROOT / "tables")
+        #            copy_libs += ["libblosc2.dylib"]
+
+        #            dll_dir = "/tmp/hdf5/lib"
+        #            # Copy dlls when producing the wheels in CI
+        #            if "bdist_wheel" in sys.argv and os.path.exists(dll_dir):
+        #                shared_libs = glob.glob(
+        #                    str(libdir) + "/libblosc2*.dylib"
+        #                )
+        #                for lib in shared_libs:
+        #                    shutil.copy(lib, dll_dir)
+
+        #        else:
+        #            copy_libs += ["libblosc2.dll"]
+        #            dll_dir = f"{CONDA_PREFIX}\\Library\\bin"
+        #            # Copy dlls when producing the wheels in CI
+        #            if "bdist_wheel" in sys.argv and os.path.exists(dll_dir):
+        #                # If building a wheel and Conda in use, these could be the
+        #                # same path. Indicative that the ``rundir`` check is probably
+        #                # not sufficient above, but easy enough to guard against
+        #                # trying to copy a file to its current location
+        #                # (thereby avoiding a "are the same file" shutil error).
+        #                if Path(dll_dir) != libdir.parent / "bin":
+        #                    shutil.copy(
+        #                        libdir.parent / "bin" / "libblosc2.dll", dll_dir
+        #                    )
+        #            else:
+        #                shutil.copy(
+        #                    libdir.parent / "bin" / "libblosc2.dll", "tables"
+        #                )
+        #    else:
+        #        if "bdist_wheel" in sys.argv and os.name == "nt":
+        #            exit_with_error(
+        #                f"Could not find the {package.name} runtime.",
+        #                f"The {package.name} shared library was *not* found "
+        #                f"in {loc}. Cannot build wheel without the runtime.",
+        #            )
+
+        #        print_warning(
+        #            f"Could not find the {package.name} runtime.",
+        #            f"The {package.name} shared library was *not* found "
+        #            f"in {loc}. In case of runtime problems, please "
+        #            f"remember to install it.",
+        #        )
 
         if os.name == "nt":
             # LZO DLLs cannot be copied to the binary package for license
